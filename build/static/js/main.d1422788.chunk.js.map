{"version":3,"sources":["graphql/mutation.js","components/AddSong.jsx","components/Header.jsx","components/QueuedSongList.jsx","graphql/subscription.js","components/Songlist.jsx","graphql/queries.js","components/SongPlayer.jsx","reducer.js","App.js","theme.js","graphql/client.js","index.js"],"names":["ADD_OR_REMOVE_FROM_QUEUE","gql","ADD_SONG","useStyles","makeStyles","theme","container","display","alignItems","urlInput","margin","spacing","addSongButton","dialog","textAlign","thumbnail","width","defaultSong","duration","title","artist","AddSong","classes","useMutation","addSong","error","useState","url","setUrl","playable","setPlayabale","setDialog","song","setSong","useEffect","isPlayable","SoundCloudPlayer","canPlay","YoutubePlayer","handleCloseDialog","handleChangeSong","e","target","name","value","prevSong","handleEditSong","a","player","nestedPlayer","getVideoData","songData","getYoutubeInfo","getCurrentSound","getSoundCloudInfo","handleAddSong","variables","length","console","getDuration","video_id","author","Promise","resolve","Number","user","username","artwork_url","replace","handleError","field","graphQLErrors","extensions","path","includes","className","Dialog","open","onClose","DialogTitle","DialogContent","src","alt","TextField","onChange","label","fullWidth","helperText","DialogActions","Button","onClick","color","variant","placeholder","type","InputProps","startAdornment","InputAdornment","position","Link","disabled","endIcon","AddBoxOutlined","hidden","onReady","marginLeft","Header","AppBar","Toolbar","HeadsetRounded","Typography","component","QueuedSongList","queue","log","greaterThanMedium","useMediaQuery","breakpoints","up","avatar","height","text","textOverflow","overflow","gridAutoFlow","gridTemplateColumns","gridGap","marginTop","songInfoContainer","whiteSpace","UpcomingSong","onCompleted","data","localStorage","setItem","JSON","stringify","addOrRemoveFromQueue","Avatar","IconButton","input","__typename","Delete","style","map","i","GET_SONGS","Songlist","useSubscription","loading","flexDirection","CircularProgress","songInfo","justifyContent","objectFit","Song","id","useContext","SongContext","state","dispatch","currentSongPlaying","setCurrentSongPlaying","isSongPlaying","isPlaying","Card","CardMedia","image","CardContent","gutterBottom","CardActions","payload","size","Pause","PlayArrow","Save","songs","GET_QUEUED_SONGS","details","padding","content","flex","controls","paddingLeft","paddingRight","playIcon","SongPlayer","useQuery","reactPlayerRef","useRef","played","setPlayed","playedSeconds","setPlayedSeconds","seeking","setSeeking","positionInQueue","setPositionInQueue","songIndex","findIndex","nextSong","seconds","SkipPrevious","SkipNext","Date","toISOString","substr","Slider","onMouseDown","onMouseUp","current","seekTo","newValue","min","max","step","ref","onProgress","playing","songReducer","action","React","createContext","App","initialSongState","useReducer","greaterThanSmall","Provider","Hidden","only","Grid","paddingTop","item","xs","md","right","top","left","bottom","createMuiTheme","palette","primary","lightBlue","secondary","lime","client","ApolloClient","link","WebSocketLink","uri","options","reconnect","cache","InMemoryCache","typeDefs","resolvers","Mutation","_","queryResult","readQuery","query","newQueue","some","filter","writeQuery","Boolean","getItem","parse","writeData","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.d1422788.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\n\nexport const ADD_OR_REMOVE_FROM_QUEUE = gql`\n  mutation addOrRemoveFromQueue($input: SongInput!) {\n    addOrRemoveFromQueue(input: $input) @client\n  }\n`;\n\nexport const ADD_SONG = gql`\n  mutation addSong(\n    $title: String!\n    $artist: String!\n    $thumbnail: String!\n    $duration: Float!\n    $url: String!\n  ) {\n    insert_songs(\n      objects: {\n        title: $title\n        artist: $artist\n        thumbnail: $thumbnail\n        duration: $duration\n        url: $url\n      }\n    ) {\n      affected_rows\n    }\n  }\n`;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  InputAdornment,\n  Link,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport { AddBoxOutlined } from \"@material-ui/icons\";\nimport React, { useState, useEffect } from \"react\";\nimport SoundCloudPlayer from \"react-player/lib/players/SoundCloud\";\nimport YoutubePlayer from \"react-player/lib/players/YouTube\";\nimport ReactPlayer from \"react-player\";\nimport { ADD_SONG } from \"../graphql/mutation\";\nimport { useMutation } from \"@apollo/client\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  urlInput: {\n    margin: theme.spacing(1),\n  },\n  addSongButton: {\n    margin: theme.spacing(1),\n  },\n  dialog: {\n    textAlign: \"center\",\n  },\n  thumbnail: {\n    width: \"90%\",\n  },\n}));\n\nconst defaultSong = {\n  duration: 0,\n  title: \"\",\n  artist: \"\",\n  thumbnail: \"\",\n};\n\nconst AddSong = () => {\n  const classes = useStyles();\n  const [addSong, { error }] = useMutation(ADD_SONG);\n  const [url, setUrl] = useState();\n  const [playable, setPlayabale] = useState(false);\n  const [dialog, setDialog] = useState(false);\n  const [song, setSong] = useState(defaultSong);\n\n  useEffect(() => {\n    const isPlayable =\n      SoundCloudPlayer.canPlay(url) || YoutubePlayer.canPlay(url);\n    setPlayabale(isPlayable);\n  }, [url]);\n\n  const handleCloseDialog = () => {\n    setDialog(false);\n  };\n\n  const handleChangeSong = (e) => {\n    const { name, value } = e.target;\n    setSong((prevSong) => ({\n      ...prevSong,\n      [name]: value,\n    }));\n  };\n\n  const handleEditSong = async ({ player }) => {\n    const nestedPlayer = player.player.player;\n    let songData;\n\n    if (nestedPlayer.getVideoData) {\n      songData = getYoutubeInfo(nestedPlayer);\n    } else if (nestedPlayer.getCurrentSound) {\n      songData = await getSoundCloudInfo(nestedPlayer);\n    }\n    setSong({ ...songData, url });\n  };\n\n  const handleAddSong = async () => {\n    try {\n      const { url, thumbnail, duration, title, artist } = song;\n      await addSong({\n        variables: {\n          url: url.length > 0 ? url : null,\n          thumbnail: thumbnail.length > 0 ? thumbnail : null,\n          duration: duration > 0 ? duration : null,\n          title: title.length > 0 ? title : null,\n          artist: artist.length > 0 ? artist : null,\n        },\n      });\n\n      handleCloseDialog();\n      setSong(defaultSong);\n      setUrl(\"\");\n    } catch (error) {\n      console.error(\"Error adding song\", error);\n    }\n  };\n\n  const getYoutubeInfo = (player) => {\n    const duration = player.getDuration();\n    const { title, video_id, author } = player.getVideoData();\n    const thumbnail = `http://img.youtube.com/vi/${video_id}/0.jpg`;\n\n    return {\n      duration,\n      title,\n      artist: author,\n      thumbnail,\n    };\n  };\n\n  const getSoundCloudInfo = (player) => {\n    return new Promise((resolve) => {\n      player.getCurrentSound((songData) => {\n        if (songData) {\n          resolve({\n            duration: Number(songData.duration / 1000),\n            title: songData.title,\n            artist: songData.user.username,\n            thumbnail: songData.artwork_url.replace(\"-large\", \"-t500x500\"),\n          });\n        }\n      });\n    });\n  };\n\n  const handleError = (field) => {\n    return error?.graphQLErrors[0]?.extensions?.path.includes(field);\n  };\n\n  const { thumbnail, title, artist } = song;\n\n  return (\n    <div className={classes.container}>\n      <Dialog\n        className={classes.dialog}\n        open={dialog}\n        onClose={handleCloseDialog}\n      >\n        <DialogTitle>Edit Song </DialogTitle>\n        <DialogContent>\n          <img\n            src={thumbnail}\n            alt=\"Song thumbnail\"\n            className={classes.thumbnail}\n          />\n          <TextField\n            value={title}\n            onChange={handleChangeSong}\n            margin=\"dense\"\n            name=\"title\"\n            label=\"Title\"\n            fullWidth\n            error={handleError(\"title\")}\n            helperText={handleError(\"title\") && \" field required\"}\n          />\n          <TextField\n            value={artist}\n            onChange={handleChangeSong}\n            margin=\"dense\"\n            name=\"artist\"\n            label=\"Artist\"\n            fullWidth\n            error={handleError(\"artist\")}\n            helperText={handleError(\"artist\") && \" field required\"}\n          />\n          <TextField\n            value={thumbnail}\n            onChange={handleChangeSong}\n            margin=\"dense\"\n            name=\"thumbnail\"\n            label=\"Thumbnail\"\n            fullWidth\n            error={handleError(\"thumbnail\")}\n            helperText={handleError(\"thumbnail\") && \" field required\"}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddSong} color=\"primary\" variant=\"outlined\">\n            Add Song\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <TextField\n        className={classes.urlInput}\n        onChange={(e) => setUrl(e.target.value)}\n        value={url}\n        placeholder=\"Add Youtube or Soundcloud Url 😎 \"\n        fullWidth\n        margin=\"normal\"\n        type=\"url\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Link />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <Button\n        disabled={!playable}\n        className={classes.addSongButton}\n        onClick={() => setDialog(true)}\n        variant=\"contained\"\n        color=\"primary\"\n        endIcon={<AddBoxOutlined />}\n      >\n        Add\n      </Button>\n      <ReactPlayer url={url} hidden onReady={handleEditSong} />\n    </div>\n  );\n};\n\nexport default AddSong;\n","import { AppBar, Toolbar, Typography, makeStyles } from \"@material-ui/core\";\nimport { HeadsetRounded } from \"@material-ui/icons\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <AppBar color=\"primary\" position=\"fixed\">\n      <Toolbar>\n        <HeadsetRounded />\n        <Typography className={classes.title} variant=\"h6\" component=\"h1\">\n          Blue Music Share\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import { useMutation } from \"@apollo/client\";\nimport {\n  Avatar,\n  IconButton,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutation\";\n\nconst QueuedSongList = ({ queue }) => {\n  console.log({ queue });\n  const greaterThanMedium = useMediaQuery((theme) =>\n    theme.breakpoints.up(\"md\")\n  );\n\n  // const song = {\n  //   title: \"Yes yes yeah\",\n  //   artist: \"Rico Tati\",\n  //   thumbnail:\n  //     \"https://images.pexels.com/photos/196652/pexels-photo-196652.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\n  // };\n\n  const useStyles = makeStyles({\n    avatar: {\n      width: 44,\n      height: 44,\n    },\n\n    text: {\n      textOverflow: \"ellipsis\",\n      overflow: \"hidden\",\n    },\n    container: {\n      display: \"grid\",\n      gridAutoFlow: \"column\",\n      gridTemplateColumns: \"50px auto 50px\",\n      gridGap: 12,\n      alignItems: \"center\",\n      marginTop: 10,\n    },\n\n    songInfoContainer: {\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\",\n    },\n  });\n\n  const UpcomingSong = ({ song }) => {\n    const classes = useStyles();\n    const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\n      onCompleted: (data) => {\n        localStorage.setItem(\n          \"queue\",\n          JSON.stringify(data.addOrRemoveFromQueue)\n        );\n      },\n    });\n    const { thumbnail, artist, title } = song;\n\n    const handleAddorRemoveFromQueue = () => {\n      addOrRemoveFromQueue({\n        variables: { input: { ...song, __typename: \"Song\" } },\n      });\n    };\n    return (\n      <div className={classes.container}>\n        <Avatar\n          className={classes.avatar}\n          src={thumbnail}\n          alt=\"song thumbnail\"\n        />\n        <div className={classes.songInfoContainer}>\n          <Typography className={classes.text} variant=\"subtitle2\">\n            {title}\n          </Typography>\n          <Typography\n            className={classes.text}\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            {artist}\n          </Typography>\n        </div>\n        <IconButton onClick={handleAddorRemoveFromQueue}>\n          <Delete color=\"error\" />\n        </IconButton>\n      </div>\n    );\n  };\n\n  return (\n    greaterThanMedium && (\n      <div style={{ margin: \"10px 0\" }}>\n        <Typography color=\"textSecondary\" variant=\"button\">\n          Upcoming Songs ({queue.length})\n        </Typography>\n        {queue.map((song, i) => (\n          <UpcomingSong key={i} song={song} />\n        ))}\n      </div>\n    )\n  );\n};\n\nexport default QueuedSongList;\n","import { gql } from \"apollo-boost\";\n\nexport const GET_SONGS = gql`\n  subscription getSongs {\n    songs(order_by: { created_at: desc }) {\n      artist\n      duration\n      id\n      thumbnail\n      title\n      url\n    }\n  }\n`;\n","import {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  CircularProgress,\n  IconButton,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { PlayArrow, Save, Pause } from \"@material-ui/icons\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useMutation, useSubscription } from \"@apollo/react-hooks\";\nimport { GET_SONGS } from \"../graphql/subscription\";\nimport { SongContext } from \"../App\";\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutation\";\nimport { Delete } from \"@material-ui/icons\";\n\nconst Songlist = () => {\n  // let loading = false;\n  const { data, loading, error } = useSubscription(GET_SONGS);\n\n  // const song = {\n  //   title: \"The Heat Wave\",\n  //   artist: \"Papi Rico\",\n  //   thumbnail:\n  //     \"https://images.pexels.com/photos/6966/abstract-music-rock-bw.jpg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\n  // };\n\n  if (loading) {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          marginTop: 50,\n        }}\n      >\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <div>Error getting songs</div>;\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      margin: theme.spacing(3),\n    },\n    songInfoContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    songInfo: {\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    thumbnail: {\n      objectFit: \"cover\",\n      width: 140,\n      height: 140,\n    },\n  }));\n\n  const Song = ({ song }) => {\n    const { id } = song;\n    const classes = useStyles();\n    const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\n      onCompleted: (data) => {\n        localStorage.setItem(\n          \"queue\",\n          JSON.stringify(data.addOrRemoveFromQueue)\n        );\n      },\n    });\n    const { thumbnail, title, artist } = song;\n    const { state, dispatch } = useContext(SongContext);\n    const [currentSongPlaying, setCurrentSongPlaying] = useState(false);\n\n    useEffect(() => {\n      const isSongPlaying = state.isPlaying && id === state.song.id;\n      setCurrentSongPlaying(isSongPlaying);\n    }, [id, state.song.id, state.isPlaying]);\n\n    const handleTogglePlay = () => {\n      dispatch({ type: \"SET_SONG\", payload: { song } });\n      dispatch(\n        state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" }\n      );\n    };\n\n    const handleAddorRemoveFromQueue = () => {\n      addOrRemoveFromQueue({\n        variables: { input: { ...song, __typename: \"Song\" } },\n      });\n    };\n\n    // const handleAddorRemoveFromQueue = () => {\n    //   addOrRemoveFromQueue({\n    //     variables: { input: { ...song, __typename: \"Song\" } },\n    //   });\n    // };\n\n    return (\n      <Card className={classes.container}>\n        <div className={classes.songInfoContainer}>\n          <CardMedia className={classes.thumbnail} image={thumbnail} />\n          <div className={classes.songInfo}>\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {title}\n              </Typography>\n              <Typography variant=\"body5\" component=\"p\" color=\"textSecondary\">\n                {artist}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <IconButton\n                onClick={handleTogglePlay}\n                size=\"small\"\n                color=\"primary\"\n              >\n                {currentSongPlaying ? <Pause /> : <PlayArrow />}\n              </IconButton>\n              <IconButton\n                onClick={handleAddorRemoveFromQueue}\n                size=\"small\"\n                color=\"secondary\"\n              >\n                <Save />\n              </IconButton>\n              {/* <IconButton onClick={handleAddorRemoveFromQueue}>\n                <Delete color=\"error\" />\n              </IconButton> */}\n            </CardActions>\n          </div>\n        </div>\n      </Card>\n    );\n  };\n  return (\n    <div>\n      {data.songs.map((song) => (\n        <Song key={song.id} song={song} />\n      ))}\n    </div>\n  );\n};\n\nexport default Songlist;\n","import { gql } from \"apollo-boost\";\n\nexport const GET_SONGS = gql`\n  query getSongs {\n    songs(order_by: { created_at: desc }) {\n      artist\n      duration\n      id\n      thumbnail\n      title\n      url\n    }\n  }\n`;\n\nexport const GET_QUEUED_SONGS = gql`\n  query getQueuedSongs {\n    queue @client {\n      id\n      duration\n      title\n      artist\n      thumbnail\n      url\n    }\n  }\n`;\n","import {\n  Card,\n  CardContent,\n  CardMedia,\n  IconButton,\n  Slider,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { PlayArrow, SkipNext, SkipPrevious, Pause } from \"@material-ui/icons\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport QueuedSongList from \"./QueuedSongList\";\nimport { SongContext } from \"../App\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_QUEUED_SONGS } from \"../graphql/queries\";\nimport ReactPlayer from \"react-player\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"0px 15px\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n\n  thumbnail: {\n    width: 150,\n  },\n\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n}));\n\nconst SongPlayer = () => {\n  const { data } = useQuery(GET_QUEUED_SONGS);\n  const reactPlayerRef = useRef();\n  const { state, dispatch } = useContext(SongContext);\n  const [played, setPlayed] = useState(0);\n  const [playedSeconds, setPlayedSeconds] = useState(0);\n  const [seeking, setSeeking] = useState(false);\n  const classes = useStyles();\n  const [positionInQueue, setPositionInQueue] = useState(0);\n\n  useEffect(() => {\n    const songIndex = data.queue.findIndex((song) => song.id === state.song.id);\n    setPositionInQueue(songIndex);\n  }, [data.queue, state.song.id]);\n\n  useEffect(() => {\n    const nextSong = data.queue[positionInQueue + 1];\n    if (played >= 0.99 && nextSong) {\n      setPlayed(0);\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\n    }\n  }, [data.queue, played, dispatch, positionInQueue]);\n\n  const handleTogglePlay = () => {\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" });\n  };\n\n  const handleProgressChange = (e, newValue) => {\n    setPlayed(newValue);\n  };\n\n  const handleSeekMouseDown = () => {\n    setSeeking(true);\n  };\n\n  const handleSeekMouseUp = () => {\n    setSeeking(false);\n    reactPlayerRef.current.seekTo(played);\n  };\n\n  const formatDuration = (seconds) => {\n    return new Date(seconds * 1000).toISOString().substr(11, 8);\n  };\n\n  const handlePlayPrevSong = () => {\n    const prevSong = data.queue[positionInQueue - 1];\n    if (prevSong) {\n      dispatch({ type: \"SET_SONG\", payload: { song: prevSong } });\n    }\n  };\n\n  const handlePlayNextSong = () => {\n    const nextSong = data.queue[positionInQueue + 1];\n    if (nextSong) {\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\n    }\n  };\n\n  return (\n    <>\n      <Card className={classes.container} variant=\"outlined\">\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <Typography variant=\"h5\" component=\"h3\">\n              {state.song.title}\n            </Typography>\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n              {state.song.artist}\n            </Typography>\n          </CardContent>\n          <div className={classes.controls}>\n            <IconButton onClick={handlePlayPrevSong}>\n              <SkipPrevious />\n            </IconButton>\n            <IconButton onClick={handleTogglePlay}>\n              {state.isPlaying ? (\n                <Pause className={classes.playIcon} />\n              ) : (\n                <PlayArrow className={classes.playIcon} />\n              )}\n            </IconButton>\n            <IconButton onClick={handlePlayNextSong}>\n              <SkipNext />\n            </IconButton>\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n              {formatDuration(playedSeconds)}\n            </Typography>\n          </div>\n          <Slider\n            onMouseDown={handleSeekMouseDown}\n            onMouseUp={handleSeekMouseUp}\n            onChange={handleProgressChange}\n            value={played}\n            type=\"range\"\n            min={0}\n            max={1}\n            step={0.01}\n          />\n        </div>\n        <ReactPlayer\n          ref={reactPlayerRef}\n          onProgress={({ played, playedSeconds }) => {\n            if (!seeking) {\n              setPlayed(played);\n              setPlayedSeconds(playedSeconds);\n            }\n          }}\n          hidden\n          url={state.song.url}\n          playing={state.isPlaying}\n        />\n        <CardMedia className={classes.thumbnail} image={state.song.thumbnail} />\n      </Card>\n      <QueuedSongList queue={data.queue} />\n    </>\n  );\n};\n\nexport default SongPlayer;\n","function songReducer(state, action) {\n  switch (action.type) {\n    case \"PLAY_SONG\": {\n      return {\n        ...state,\n        isPlaying: true,\n      };\n    }\n    case \"PAUSE_SONG\": {\n      return {\n        ...state,\n        isPlaying: false,\n      };\n    }\n\n    case \"SET_SONG\": {\n      return {\n        ...state,\n        song: action.payload.song,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default songReducer;\n","import React, { useContext, useReducer } from \"react\";\nimport AddSong from \"./components/AddSong\";\nimport Header from \"./components/Header\";\nimport QueuedSongList from \"./components/QueuedSongList\";\nimport Songlist from \"./components/Songlist\";\nimport SongPlayer from \"./components/SongPlayer\";\nimport { Grid, useMediaQuery, Hidden } from \"@material-ui/core\";\nimport songReducer from \"./reducer\";\n\nexport const SongContext = React.createContext({\n  song: {\n    id: \"8f551863-5eda-45d1-9d94-3538cd678470\",\n    title: \"Davido - Jowo (Official Video)\",\n    artist: \"Davido\",\n    thumbnail: \"http://img.youtube.com/vi/l6QMJniQWxQ/0.jpg\",\n    url: \"https://www.youtube.com/watch?v=l6QMJniQWxQ\",\n    duration: 177,\n  },\n  isPlaying: false,\n});\n\nfunction App() {\n  const initialSongState = useContext(SongContext);\n  const [state, dispatch] = useReducer(songReducer, initialSongState);\n  const greaterThanMedium = useMediaQuery((theme) =>\n    theme.breakpoints.up(\"md\")\n  );\n  const greaterThanSmall = useMediaQuery((theme) => theme.breakpoints.up(\"sm\"));\n\n  return (\n    <SongContext.Provider value={{ state, dispatch }}>\n      <Hidden only=\"xs\">\n        <Header />\n      </Hidden>\n\n      <Grid container spacing={3}>\n        <Grid\n          style={{\n            paddingTop: greaterThanSmall ? 80 : 10,\n          }}\n          item\n          xs={12}\n          md={7}\n        >\n          <AddSong />\n          <Songlist />\n        </Grid>\n        <Grid\n          style={\n            greaterThanMedium\n              ? {\n                  position: \"fixed\",\n                  width: \"100%\",\n                  right: 0,\n                  top: 70,\n                }\n              : {\n                  position: \"fixed\",\n                  width: \"100%\",\n                  left: 0,\n                  bottom: 0,\n                }\n          }\n          item\n          xs={12}\n          md={5}\n        >\n          <SongPlayer />\n        </Grid>\n      </Grid>\n    </SongContext.Provider>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { lightBlue, lime } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: lightBlue,\n    secondary: lime,\n  },\n});\n\nexport default theme;\n","import ApolloClient from \"apollo-client\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { gql } from \"apollo-boost\";\nimport { GET_QUEUED_SONGS } from \"./queries\";\n\nconst client = new ApolloClient({\n  link: new WebSocketLink({\n    uri: \"wss://blue-music-share.herokuapp.com/v1/graphql\",\n    options: {\n      reconnect: true,\n    },\n  }),\n  cache: new InMemoryCache(),\n  typeDefs: gql`\n    type Song {\n      id: uuid!\n      title: String!\n      artist: String!\n      thumbnail: String!\n      duration: Float!\n      url: String!\n    }\n\n    input SongInput {\n      id: uuid!\n      title: String!\n      artist: String!\n      thumbnail: String!\n      duration: Float!\n      url: String!\n    }\n\n    type Query {\n      queue: [Song]!\n    }\n\n    type Mutation {\n      addOrRemoveFromQueue(input: SongInput!): [Song]!\n    }\n  `,\n\n  resolvers: {\n    Mutation: {\n      addOrRemoveFromQueue: (_, { input }, { cache }) => {\n        const queryResult = cache.readQuery({\n          query: GET_QUEUED_SONGS,\n        });\n        if (queryResult) {\n          const { queue } = queryResult;\n          const isInQueue = queue.some((song) => song.id === input.id);\n          const newQueue = isInQueue\n            ? queue.filter((song) => song.id !== input.id)\n            : [...queue, input];\n          cache.writeQuery({\n            query: GET_QUEUED_SONGS,\n            data: { queue: newQueue },\n          });\n\n          return newQueue;\n        }\n        return [];\n      },\n    },\n  },\n});\n\nconst hasQueue = Boolean(localStorage.getItem(\"queue\"));\n\nconst data = {\n  queue: hasQueue ? JSON.parse(localStorage.getItem(\"queue\")) : [],\n};\n\n// import ApolloClient from \"apollo-boost\";\n\n// const client = new ApolloClient({\n//   uri: \"https://blue-music-share.herokuapp.com/v1/graphql\",\n// });\n\nclient.writeData({ data });\n\nexport default client;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport theme from \"./theme\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport client from \"./graphql/client\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </MuiThemeProvider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}